name: Test and build the sample game

on:
  workflow_dispatch:
#   push:
#     branches:
#       - 'main'

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  checkLicense:
    name: Check for the Unity license ☑️
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license ☠️
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1


  # testRunner:
  #   name: test everything
  #   needs: checkLicense
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Create LFS file list
  #       run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

  #     - name: Restore LFS cache
  #       uses: actions/cache@v3
  #       id: lfs-cache
  #       with:
  #         path: .git/lfs
  #         key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

  #     - name: Git LFS Pull
  #       run: |
  #         git lfs pull
  #         git add .
  #         git reset --hard

  #     - name: Restore Library cache
  #       uses: actions/cache@v3
  #       with:
  #         path: Library
  #         key: Library-test-project
  #         restore-keys: |
  #           Library-test-project-
  #           Library-

  #     - name: start test runner
  #       uses: game-ci/unity-test-runner@v3
  #       id: tests
  #       with:
  #         testMode: all
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: Test results
  #         path: ${{ steps.tests.outputs.artifactsPath }}


  buildForAndroidPlatform:
    needs: checkLicense
    name: Build for Android
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
    steps:
        -   name: Checkout code
            uses: actions/checkout@v3

        -   name: Create LFS file list
            run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

        -   name: Restore LFS cache
            uses: actions/cache@v3
            id: lfs-cache
            with:
                path: .git/lfs
                key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

        -   name: Git LFS Pull
            run: |
                git lfs pull
                git add .
                git reset --hard

        -   name: Restore Library cache
            uses: actions/cache@v3
            with:
                path: Library
                key: Library-build-Android
                restore-keys: |
                    Library-build-
                    Library-

        -   name: Free Disk Space for Android
            uses: jlumbroso/free-disk-space@v1.3.0
            # run: |
            #     sudo swapoff -a
            #     sudo rm -f /swapfile
            #     sudo apt clean
            #     docker rmi $(docker image ls -aq)
            #     df -h

        -   name: Build it for Android
            uses: game-ci/unity-builder@v3
            id: androidBuilder
            env:
                UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
                UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
                UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
            with:
                targetPlatform: Android
                androidExportType: 'androidAppBundle'
                androidKeystoreName: user.keystore
                androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
                androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
                androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
                androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
        -   name: list root folder files
            run: ls

        -   name: Upload the Android build artifacts
            uses: actions/upload-artifact@v3
            with:
                name: build-Android
                path: build/Android